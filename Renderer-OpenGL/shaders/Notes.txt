
SSAO: We currently have to textures eaching only having one channel GL_RED, where the first is the blured version and the second the unblurred version
	: We could just have one texture with mulitple components GL_RG, for example. Not sure if this is better. --DEAD. Won't work because then how do you
	: blur ? The blur shader binds a texture and then looks all round.

Notes: 
	UV Shpere:
			 : This was confusing me. the inverse of atan2(y, x) is x = r*cos(theta), y = r*sin(theta) r > 0
			 : IE: It's sphereical coords
			 : //http://paulbourke.net/miscellaneous/cubemaps/
			 : //https://math.stackexchange.com/questions/1395679/how-would-i-find-a-point-on-a-sphere-with-a-uv-coordinate/	


DEMO:
	SSR <---
	MIRROR <---
	UI <---

	FFXA (DONE)
	BLENDING <---
	SHADOW <---
	SSAO
	INSTANCE RENDERING
	BLOOM (DONE)
	TONE MAPPING (DONE)
	ANIMATION (DONE)
	PBR (DONE)

	
RECAP:
	Gram-Schmidt process (SSAO)
	projection matrix.
	projection divide.
	view matrix.
	slerp
	quats
	transforms

DAY:
	1hour{
	finish opengl thing
	chapter 2
	}

Performace:
	We do all copies for WorldObject function



TODO:
	HIGH PRIO:
		Sort out shader mayhem !		
		Rewrite EdiableMesh class.
		Figure out how to write to gpu animation data nicely
		Platform window needs abstraction
		Finish bloom editor properties

	MED PRIO:
		RenderWorld function needs to go.
				
		Implement array class. Im not sure if it worth it though... (HARRRRD)
		Math lib need formating like opengl.h, const &&& (GARETH)

	LOW PRIO:
		OpenGL layout class		

