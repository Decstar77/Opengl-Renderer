
SSAO: We currently have to textures eaching only having one channel GL_RED, where the first is the blured version and the second the unblurred version
	: We could just have one texture with mulitple components GL_RG, for example. Not sure if this is better. --DEAD. Won't work because then how do you
	: blur ? The blur shader binds a texture and then looks all round.

BLOOM:
	There are other options not show on the edit. They are for the guassien blur. The downsample mulitplier and the number of itterations.


Notes: 
	UV Shpere:
			 : This was confusing me. the inverse of atan2(y, x) is x = r*cos(theta), y = r*sin(theta) r > 0
			 : IE: It's sphereical coords
			 : //http://paulbourke.net/miscellaneous/cubemaps/
			 : //https://math.stackexchange.com/questions/1395679/how-would-i-find-a-point-on-a-sphere-with-a-uv-coordinate/	
	SSR:
		http://imanolfotia.com/blog/update/2017/03/11/ScreenSpaceReflections.html
		http://imanolfotia.com/blog/update/2019/05/16/better-reflections.html
		http://roar11.com/2015/07/screen-space-glossy-reflections/
		https://lettier.github.io/3d-game-shaders-for-beginners/screen-space-reflection.html#copyright
		https://github.com/lettier/3d-game-shaders-for-beginners/blob/master/demonstration/shaders/fragment/screen-space-reflection.frag
		https://github.com/ImanolFotia/Epsilon-Engine/blob/master/bin/Release/shaders/SSR.frag
		https://github.com/godotengine/godot/blob/6a38ce1b318cc71c285c11f5b52f04a681c309fd/servers/rendering/rasterizer_rd/shaders/screen_space_reflection.glsl#L132


	Deffered Rendering Problems:
		Anti anialising


Problems:
	Writing GPU data -- Animation data, texture data.
	Interaction bettween transform and bounding mesh and ??? collision mesh ???
	

BUGS:
	EulerRotation of EulerToQuat(Vec3(90, 0, 0)) flips when opening up the editor inspector


DEMO:
	SSR <---
	MIRROR <---
	UI <---

	BLENDING <---
	SHADOW <---
	INSTANCE RENDERING
	SSAO (DONE)
	FFXA (DONE)
	BLOOM (DONE)
	TONE MAPPING (DONE)
	ANIMATION (DONE)
	PBR (DONE)
	WIDGETS (DONE)

	
RECAP:
	Gram-Schmidt process (SSAO)
	projection matrix.
	projection divide.
	view matrix.
	slerp
	quats
	transforms

}

Performace:
	We do all copies for WorldObject function



TODO:
		Inverse(mat3);
		Sort out shader mayhem !		
		Rewrite EdiableMesh class.
		Figure out how to write to gpu animation data nicely
		Platform window needs abstraction
		Finish bloom editor (KERNEL)
		Math lib need formating like opengl.h, const &&& (GARETH)
		PointLight billboards/visualiztion
		s\


	
	
	
	
	
	
	
	
	
	
	
	Rotate point about another poitn
			Vec3 p = Vec3(0, 0, 1);
	Vec3 f = Vec3(1, 1, 1);

	Vec3 e = f - p;
	Vec3 d = Rotate(90, e, Vec3(0, 0, 1)) + p;
