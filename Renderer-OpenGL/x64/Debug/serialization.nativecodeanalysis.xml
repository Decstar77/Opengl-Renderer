<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\math</FILEPATH>
      <FILENAME>cosmicmath.h</FILENAME>
      <LINE>655</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cm::RadToDeg</FUNCTION>
    <DECORATED>?RadToDeg@cm@@YAMM@Z</DECORATED>
    <FUNCLINE>653</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\math</FILEPATH>
      <FILENAME>cosmicmath.h</FILENAME>
      <LINE>737</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>6290</DEFECTCODE>
    <DESCRIPTION>Bitwise operation on logical result:  ! has higher precedence than &amp;.  Use &amp;&amp; or (!(x &amp; y)) instead.</DESCRIPTION>
    <FUNCTION>cm::RadicalInverse</FUNCTION>
    <DECORATED>?RadicalInverse@cm@@YAMI@Z</DECORATED>
    <FUNCLINE>731</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.cpp</FILENAME>
      <LINE>4</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'cm::BitmapExport::size_bytes' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>cm::BitmapExport::{ctor}</FUNCTION>
    <DECORATED>??0BitmapExport@cm@@QEAA@XZ</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cm::BitmapExport::Write</FUNCTION>
    <DECORATED>?Write@BitmapExport@cm@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>84</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cm::BitmapExport::Write</FUNCTION>
    <DECORATED>?Write@BitmapExport@cm@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.cpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cm::BitmapExport::Write</FUNCTION>
    <DECORATED>?Write@BitmapExport@cm@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.cpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cm::BitmapExport::Write</FUNCTION>
    <DECORATED>?Write@BitmapExport@cm@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.h</FILENAME>
      <LINE>32</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'cm::BitmapFileHeader::dataOffset' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>cm::BitmapFileHeader::{ctor}</FUNCTION>
    <DECORATED>??0BitmapFileHeader@cm@@QEAA@XZ</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.h</FILENAME>
      <LINE>32</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'cm::BitmapFileHeader::fileSize' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>cm::BitmapFileHeader::{ctor}</FUNCTION>
    <DECORATED>??0BitmapFileHeader@cm@@QEAA@XZ</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.h</FILENAME>
      <LINE>23</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'cm::BitmapInfoHeader::width' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>cm::BitmapInfoHeader::{ctor}</FUNCTION>
    <DECORATED>??0BitmapInfoHeader@cm@@QEAA@XZ</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.h</FILENAME>
      <LINE>23</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'cm::BitmapInfoHeader::height' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>cm::BitmapInfoHeader::{ctor}</FUNCTION>
    <DECORATED>??0BitmapInfoHeader@cm@@QEAA@XZ</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cm::BitmapExport::Create</FUNCTION>
    <DECORATED>?Create@BitmapExport@cm@@QEAAXHH@Z</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cm::BitmapExport::Create</FUNCTION>
    <DECORATED>?Create@BitmapExport@cm@@QEAAXHH@Z</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cm::BitmapExport::SetPixel</FUNCTION>
    <DECORATED>?SetPixel@BitmapExport@cm@@QEAAXHHMMM@Z</DECORATED>
    <FUNCLINE>64</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cm::BitmapExport::SetPixel</FUNCTION>
    <DECORATED>?SetPixel@BitmapExport@cm@@QEAAXHHMMM@Z</DECORATED>
    <FUNCLINE>64</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>f:\renderer-opengl\renderer-opengl\src\core</FILEPATH>
      <FILENAME>serialization.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cm::BitmapExport::SetPixel</FUNCTION>
    <DECORATED>?SetPixel@BitmapExport@cm@@QEAAXHHMMM@Z</DECORATED>
    <FUNCLINE>64</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>